version: '3'
services:
    nginx:
      image: nginx:latest
      container_name: poll_man_nginx
      volumes:
          - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf #app and api panel
          - ./.docker/nginx/app/local.conf:/etc/nginx/conf.d/default.conf #app
          - ./.data/nginx/logs:/var/log/nginx
          - ./app:/var/www/app
          #- ./.data/certs/certbot/conf:/etc/letsencrypt #uncomment when production deploy
          #- ./.data/certs/certbot/www:/var/www/certbot #uncomment when production deploy
      ports:
        - ${APP_PORT}:80
        #- 443:443 #uncomment when production deploy
      depends_on:
        - app
        - web
      networks:
        - poll_man_network
      environment:
        - X_SERVER_TYPE=nginx

    app:
      build:
        context: .
        dockerfile: ./.docker/app/Dockerfile
      container_name: poll_man_app
      volumes:
        - ./app:/var/www/app
      restart: always
      networks:
        - poll_man_network
      ports:
        - "5174:5174" 
      environment:
        - X_SERVER_TYPE=app

    database:
      container_name: poll_man_database
      image: postgres:14
      environment:
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        POSTGRES_DB: ${DB_DATABASE}
        PGDATA: /data/postgres
      volumes:
        - ./.data/postgres:/data/postgres
    
      ports:
        - "5432:5432"
      restart: always
      networks:
        - poll_man_network

    redis:
      image: redis:latest
      container_name: poll_man_redis
      ports:
        - 6379:6379
      volumes:
        - ./.data/redis:/data
      entrypoint: redis-server --appendonly yes
      restart: always
      networks:
        - poll_man_network

    worker:
      build:
        context: .
        dockerfile: ./.docker/worker/Dockerfile
      container_name: poll_man_worker
      command:
        - /usr/bin/supervisord
        - -c
        - /etc/supervisord.conf
      volumes:
        - ./app:/var/www/app
        - ./.data/logs/worker:/var/log
        - ./.docker/worker/worker.conf:/etc/supervisor/conf.d/worker.conf
      ports:
        - "8080:8080"
      networks:
        - poll_man_network
      environment:
        - X_SERVER_TYPE=worker


    # certbot:
    #   image: certbot/certbot
    #   container_name: poll_man_certbot
    #   restart: unless-stopped
    #   volumes:
    #     - ./.data/certs/certbot/conf:/etc/letsencrypt
    #     - ./.data/certs/certbot/www:/var/www/certbot
    #   networks:
    #     - poll_man_network
    #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        
volumes:
  pgdata:
  redis:
    driver: local

networks:
  poll_man_network:
    driver: bridge
